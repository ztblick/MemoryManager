
Things to be done:

- Implement PTE and PFN data structures:
    - Create PFN and PTE structs (DONE)
    - Create Page Table - 1-to-1 maps from 4k of VA space to each PTE
    - Create page file (malloc to hold data written out to "disk")


Bootup:
    - Create PFN_Array - mem reserve with virtual alloc (DONE)
    - call mem commit to allocate space for each physical page
    - add all pages to free list
    - initialize other list heads?

    - initialize page table (malloc)

    - initialize page file (malloc)


Things to figure out
    - how to map 4k of VA space to each PTE?



Fault handler:
 - Figure out the specific order for this to be executed!


 First attempt:
 - No aging
 - Trim from active list from list head
 - unmap PTE
 - Write out to disk
 - update PTE
 - modify PFN
 - then serve page up to faulting VA.
